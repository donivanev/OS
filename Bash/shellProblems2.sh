/*
• Да се състави командна процедура, която  приема като параметър в командния ред име на потребител. 
Процедурата прекратява изпълнението на всички активни процеси на дадения потребител и извежда техния брой.
*/

set usr
cntPrcs=$(ps –u $1 | wc -l)
prcs=$(ps –u $1 | cut –c 1-5)
set $prcs
shift 
for i 
do 
  echo $i
  kill -9 $i
done    
echo "count = $cntPrcs"

/*
• Да се състави командна процедура, която получава при стартиране в командния ред два параметъра – символен низ и число. 
Ако съществува директория с име съвпадащо с низа, процедурата извежда на стандартния изход имената на всички обикновени 
файлове от тази директория, чийто  размер е по-голям от подаденото число. В противен случай/не съществува такава 
директория/ - на стандартния изход се извежда подходящо съобщение.
*/

set str n
if [ -d $1 ] 
then 
    for f in $1/*
    do 
      size=$(wc –c $f)
      if [ -f $f –a "$size –gt $2" ]
      then 
          echo $f
      fi
    done
else echo "No such directory"
fi

/*
• Да се състави командна процедура, която получава при стартиране в командния ред два параметъра – 
имена на съществуващи директории. Ако броят на файловете, чието разширение е „out” в първата директория е по-голям 
от броя на същите във втората директория, процедурата прочита от стандартния вход име на трета директория и 
създава поддиректория на текущата с прочетеното име. Премества в нея всички обикновени файлове от първата директория, 
които са достъпни за четене и писане, но не за изпълнение.
*/

set dir1 dir2
cnt1=$(ls $1/*.out | wc –l)
cnt2=$(ls $2/*.out | wc -l) 
if [ $cnt1 –gt $cnt2 ]
then 
    read dir3
    mkdir $dir3
    for f in $1/*
    do 
      if [ -f $f –a –r $f –a –w $f –a ! –x $f] 
      then 
          cp $f $dir3
      fi
    done 
fi

/*
• Да се състави командна процедура, която получава като позиционни параметри име на файл и акаунти на потребители. 
Прочита съобщение от стандартния вход и заедно със съдържанието на файла го изпраща на всички потребители, които са 
стартирали сесия и чийто акаунти са измежду подадените.
*/

set f1 usr1 usr2 usr3
read msg
fl=$1
shift
echo msg >> f2
for i 
do 
  if [who | grep $i | wc –l –gt 1] 
  then 
      write $i < f2
  fi
done

/*
• В директория /home/KN/student се намира файл f_niz със съдържание символен низ.  Да се състави командна процедура, 
която получава три позиционни параметъра – две имена на директории и един символен низ. Ако не е подаден символен низ 
се взима низа, от посочения по-горе файл. Процедурата прехвърля всички файлове от текущата директория с разширение .с 
в първата подадена директория, а тези с разширение .out  във втората. Извежда на стандартния изход с подходящо съобщение 
общия брой на непрехвърлените файлове. Създава директория с име подадения низ, ако такава не съществува. 
*/

set dir1 dir2 str
if [ -z $3 ]
then 
    set dir1 dir2 $(cat /home/KN/student/f_niz)
fi
mv $(find . -type f -name "*.c") $2
mv $(find . -type f -name "*.out") $3
cnt1=$(find . -type f -name "*.c" | wc -l)
cnt2=$(find . -type f -name "*.out" | wc -l)
cntAll=$(find . -type f | wc -l)
sum=$((cnt1 + cnt2))
echo $(($cntAll - $sum))
if [ ! -d $3 ]
then 
    mkdir $3
    echo $(find . -type f -name "*.c" -o -name "*.out") > names
    mv names $3
fi

/*
• Да се състави командна процедура, която получава при стартиране в командния ред два параметъра – имена на 
съществуващи директории. В случай , че общият брой на файловете, съдържащи изходен текст на Си в двете директории 
надвишава 20, процедурата създава в текущата директория файл – sources.txt, съдържащ имената им, който да е достъпен 
само за четене на всички потребители. В противен случай извежда с подходящо съобщение този брой на стандартния изход.
*/

set dir1 dir2
cnt1=$(ls $1/*.c | wc –l)
cnt2=$(ls $2/*.c | wc -l)
cntAll=$(($cnt1 + $cnt2))
if [ $cntAll –gt 20 ]
then 
    echo $(ls $1/*.c) $(ls $2/*.c) > sources.txt
fi
else echo $cntAll 

/*
• Да се състави командна процедура, която получава в командния ред при стартиране един параметър – символен низ. 
Ако не съществува директория с подаденото име в началната потребителска директория, процедурата я създава. 
Копира в тази директория всички обикновени файлове от текущата директория, които са достъпни за четене и писане и 
извежда на стандартния изход броя на останалите.
*/

set str
if [ ! -d $str ]
then 
    mkdir $str
fi           
cnt=0
for i in ./*
do 
  if [ -r $i -a -w $i]
  then 
      cp $i $str
  else cnt=`$cnt + 1` 
  fi 
done                
echo $cnt

/*
• Да се състави командна процедура, която  приема като параметър в командния ред име на потребител и име файл. 
Взима от последния ред на  подадения файл думата от началото на реда до първото срещане на символа 1 и проверява 
дали във файловата система с корен родителската директория на началната потребителска директория има файлове в 
указаното име и ако да – извежда на екрана броя им, а ако не – изпраща  подходящо съобщение на потребителя подаден 
като параметър.
*/

set usr f1
row=`tail –1l f1`
pos=`expr index $exmplStr 1`
subStr=`expr substr 1 $(($pos - 1))`
for i in ./*
do 
  if [ $i = $subStr ]
  then 
      cnt=`$cnt + 1`
  fi
done
if [ $cnt -gt 0 ]
then  
    echo $cnt
else echo "No such files" > msg
     write $usr < msg
fi  